#
# Sync file system files using rsync
#
- job-template:
    name: 'sync-{name}-{source-host}'
    display-name: 'Sync {name}: {source-host}'
    node: '{source-host}'

    parameters:
      - string:
          name: SOURCE_DIR
          default: '{source-dir}'
      - string:
          name: TARGET_DIR
          default: '{target-dir}'

    triggers:
      - timed: '{trigger}'

    builders:
      - shell: |
          #!/bin/bash -ex
          for dir in $SOURCE_DIR ; do
            rsync \
              $dir {target-host}:$TARGET_DIR \
              --exclude .DS_Store \
              --exclude *-V100 \
              --exclude .TemporaryItems \
              --exclude .fseventsd \
              --exclude *.crdownload \
              {options}
          done

    publishers:
      - email:
          recipients: '{recipients}'

#
# Organize TV episodes
#
- job-template:
    name: 'organize-episodes-{host}-{name}'
    display-name: 'Organize episodes: {host} {name}'
    node: '{host}'

    triggers:
      - timed: '{trigger}'

    builders:
      - shell: |
          #!/bin/bash -ex
          (
            cd python-mlib
            git fetch
            git reset --hard origin/master
          ) || {{
            rm -rf python-mlib
            git clone https://github.com/tkanemoto/python-mlib
          }}
      - shell: |
          #!/bin/bash -ex
          python-mlib/mlib.py organise_movies --movies TV {args} -v3 {library-dir} {search-dir}

    publishers:
      - email:
          recipients: '{recipients}'

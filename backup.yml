#
# Sync file system files using rsync
#
- defaults:
    name: sync-defaults
    rsync: rsync
    logrotate:
      numToKeep: 100

- job-group:
    name: sync
    defaults: sync-defaults
    jobs:
      - 'sync-{name}-{source-host}'

- job-template:
    name: 'sync-{name}-{source-host}'
    display-name: 'Sync {name} : {source-host}'
    node: '{source-host}'
    defaults: sync-defaults

    parameters:
      - string:
          name: SOURCE
          default: '{source-dirs}'
      - string:
          name: TARGET
          default: '{target}'
      - string:
          name: RSYNC_COMMAND
          default: '{rsync}'

    triggers:
      - timed: '{trigger}'

    builders:
      - shell: |
          #!/bin/bash -ex
          for dir in $SOURCE ; do
            $RSYNC_COMMAND \
              $dir $TARGET \
              --exclude .DS_Store \
              --exclude *-V100 \
              --exclude .TemporaryItems \
              --exclude .fseventsd \
              --exclude *.crdownload \
              {options}
          done

    publishers:
      - email:
          recipients: '{recipients}'

#
# Organize TV episodes
#
- job-template:
    name: 'organize-episodes-{host}-{name}'
    display-name: 'Organize Episodes : {host} {name}'
    node: '{host}'
    defaults: sync-defaults

    triggers:
      - timed: '{trigger}'

    builders:
      - shell: |
          #!/bin/bash -ex
          (
            cd python-mlib
            git fetch
            git reset --hard origin/master
          ) || {{
            rm -rf python-mlib
            git clone https://github.com/tkanemoto/python-mlib
          }}
      - shell: |
          #!/bin/bash -ex
          virtualenv .env
          source .env/bin/activate
          pip install -r python-mlib/requirements.txt
          cd {library-dir}
          $WORKSPACE/python-mlib/mlib.py organise_movies -v3 --traceback \
            {args} {search-dir}

    publishers:
      - email:
          recipients: '{recipients}'
      - description-setter:
          regexp: "Transferred .* failed .* out of .*"
          regexp-for-failed: "Transferred .* failed .* out of .*"

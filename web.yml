#
# Website maintenance jobs
#
- defaults:
    name: web-defaults
    logrotate:
      numToKeep: 100

- job-template:
    name: 'web-maintenance-{name}'
    display-name: 'Web Maintenance - {name}'
    node: '{name}'
    defaults: web-defaults

    triggers:
      - timed: '{trigger}'

    builders:
      - shell: |
          #!/bin/bash -ex
          cd /var/www/django-site/site
          source ../.virtualenv/bin/activate
          echo '
          from portfolios.models import *
          for p in Page.objects.all(): print(p.slug + " " + p.domain)

          ' | ./manage.py shell --settings project.settings_local | while read line ; do
            sudo rm -f static/index.html
            slug=`echo $line | cut -d ' ' -f1`
            domain=`echo $line | cut -d ' ' -f2`
            curl https://tkanemoto.com/portfolios/$slug/ > $WORKSPACE/$slug.html.new
            if [ -e $WORKSPACE/$slug.html ] && diff $WORKSPACE/$slug.html.new $WORKSPACE/$slug.html ; then
              rm $WORKSPACE/$slug.html.new
            else
              mv $WORKSPACE/$slug.html.new $WORKSPACE/$slug.html
              sudo cp $WORKSPACE/$slug.html static/index.html
            fi

            echo "
          from settings_local import *
          AWS_STORAGE_BUCKET_NAME = '$domain'
          AWS_AUTO_CREATE_BUCKET = True
          AWS_S3_OBJECT_PARAMETERS['CacheControl'] = 'max-age=86400'
          AWS_QUERYSTRING_EXPIRE = 86400
          AWS_DEFAULT_ACL = 'public-read'
          " | sudo dd of=project/temp.py

            ./manage.py collectstatic --noinput --settings project.temp
          done
          sudo rm -f static/index.html
          sudo rm -f project/temp.py

          ./manage.py collectstatic --noinput --settings project.settings_local
          ./manage.py dumpdata --indent 2 --settings project.settings_local > $WORKSPACE/dump.json

      - shell: |
          if [ `date +%H` -lt 1 ] || [ `date +%H` -gt 7 ]; then
            exit
          fi
          (cd db-dumps && git reset --hard && git pull -r) || {{
            git clone /var/gerrit/git/web/db-dumps.git --reference /var/gerrit/git/web/db-dumps.git
          }}
          cd db-dumps
          sudo -u postgres pg_dumpall > dump.sql
          git add dump.sql
          git commit -m "Dump at `date +'%F-%H%M'`" || true
          git push origin master

    publishers:
      - email:
          recipients: '{recipients}'

      - archive:
          artifacts: '*'
          allow-empty: 'true'
          fingerprint: true
